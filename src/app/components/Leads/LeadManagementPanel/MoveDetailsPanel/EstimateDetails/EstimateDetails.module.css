.estimateContainer {
  padding: 16px 20px 21px 20px;
  border-radius: 16px;
  background: #FFF;
  box-shadow: 0px 1px 16px rgba(0,0,0,0.08);
  display: flex;
  flex-direction: column;
  gap: 20px;
  margin-top: 10px;
}

.estimateHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.estimateTitle {
  color: #2F3236;
  font-family: Satoshi, sans-serif;
  font-size: 20px;
  font-weight: 700;
  line-height: 33px;
}

.minusButton {
  width: 30px;
  height: 30px;
  border-radius: 10px;
  background: #3FA9F5;
  border: none;
  cursor: pointer;
  color: #FFF;
  font-family: Satoshi, sans-serif;
  font-size: 20px;
  font-weight: 700;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
}

.innerContent {
  padding: 10px 0;
}

/* ----- TABS (Move Out / Move In) - SAME AS LogisticsDetails ----- */
.sectionsRow {
  display: flex;
  justify-content: start;
  gap: 30px;
  margin-bottom: 24px;
}

@media (max-width: 385px) {
  .sectionsRow {
    gap: 15px;
  }
}

.sectionItem {
  display: flex;
  align-items: center;
  cursor: pointer;
  height: 50px;
  border-bottom: 3px solid transparent;
}

.selected {
  border-bottom: 3px solid #3FA9F5;
}

.sectionText {
  margin-left: 5px;
  color: #90A4B7;
  font-family: Satoshi, sans-serif;
  font-size: 15px;
  font-weight: 700;
}

.textActive {
  color: #2F3236;
}

/* Invoice row on top */
.invoiceWrapper {
  margin-bottom: 20px;
}

.extraInputsContainer {
  display: flex;
  flex-direction: column;
}

/* each row has a 10px gap, next row => 20px margin-top */
.row {
  display: flex;
  width: 100%;
  gap: 10px;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
}
.row + .row {
  margin-top: 20px;
}

/* Class applied when active / showing dropdown - STANDARDIZED */
.activeInput {
  border: 1px solid var(--Blue, #3FA9F5) !important;
}

.estimateButton {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  height: 50px;
  padding: 0 20px;
  background-color: #FFF;
  color: #2F3236;
  font-family: 'Satoshi', sans-serif;
  font-size: 1rem;
  font-weight: 700;
  border-radius: 12px;
  border: 1px solid #D8DCE0;
  cursor: pointer;
  box-sizing: border-box;
  user-select: none;
  position: relative;
  margin-bottom: 12px;
}

.estimateButton:focus {
  border: 1px solid var(--Blue, #3FA9F5);
  outline: none;
}

.dropdownLabel {
  display: flex;
  align-items: center;
  gap: 6px;
  flex: 1;
  min-width: 0;
  overflow: hidden;
  white-space: nowrap;
}

.dropdownPrefix {
  font-weight: 500;
  color: #6E7882;
  font-size: 16px;
  flex-shrink: 0;
  white-space: nowrap;
}

.dropdownSelected {
  font-weight: 700;
  color: #2F3236;
  font-size: 16px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  min-width: 0;
}

.dropdownIcon {
  flex-shrink: 0;
  width: 20px;
  height: 20px;
  color: #2F3236;
  margin-left: 8px;
}

.rateTypeWrapper {
  position: relative;
  width: 100%;
}

/* Dropdown menu - STANDARDIZED */
.rateTypeDropdown {
  position: absolute;
  top: 55px;
  left: 0;
  width: 100%;
  background: #fff;
  border: none;
  border-radius: 12px;
  box-shadow: 0px 1px 16px 0px rgba(0, 0, 0, 0.08);
  margin-top: 5px;
  max-height: 220px;
  overflow-y: auto;
  z-index: 5000;
  list-style: none;
  padding: 0;
  padding-top: 15px;
  padding-bottom: 10px;
}

/* Dropdown option - STANDARDIZED */
.rateTypeOption {
  padding: 7px 10px;
  cursor: pointer;
  font-family: Satoshi, sans-serif;
  font-size: 15px;
  font-style: normal;
  font-weight: 400;
  line-height: normal;
  color: #000;
  background: #FFF;
  margin: 0 10px;
  -webkit-tap-highlight-color: transparent;
  user-select: none;
}
.rateTypeOption:hover {
  background: #F2F5F8;
  border-radius: 8px;
}

/* Selected dropdown item - STANDARDIZED */
.selectedOption {
  background: #F2F5F8;
  border-radius: 8px;
  color: #000;
}

.divider {
  width: 100%;
  height: 1px;
  background-color: #D8DCE0;
}

.placeholderText {
  margin-top: 20px;
  padding: 15px;
  background-color: #f2f5f8;
  border-radius: 12px;
  color: #6E7882;
  font-family: Satoshi, sans-serif;
  font-size: 14px;
}

/* Pricing row styles */
.pricingRow {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 50px;
  width: 100%;
  overflow: hidden;
}

.pricingLabel {
  color: #6E7882;
  font-family: Satoshi, sans-serif;
  font-size: 16px;
  font-weight: 500;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 60%;
}

.pricingValue {
  color: #2F3236;
  text-align: right;
  font-family: Satoshi, sans-serif;
  font-size: 16px;
  font-weight: 700;
  background: transparent;
  border: none;
  outline: none;
  padding: 0;
  margin: 0;
  min-width: 80px;
  width: auto;
  white-space: nowrap;
  overflow: hidden;
}

/* Add standardized focus style */
.pricingValue:focus {
  border-bottom: 1px solid var(--Blue, #3FA9F5);
}

/* Special styling for specific pricing rows */
.grandTotalLabel {
  color: #2F3236;
  font-weight: 700;
  font-size: 18px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.grandTotalValue {
  color: #2F3236;
  font-weight: 700;
  font-size: 18px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.importantLabel {
  color: #2F3236;
  font-weight: 700;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.balanceDueLabel {
  color: #2F3236;
  font-family: Satoshi, sans-serif;
  font-size: 18px;
  font-weight: 700;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.balanceDueValue {
  color: #3FA9F5;
  font-family: Satoshi, sans-serif;
  font-size: 18px;
  font-weight: 700;
  white-space: nowrap;
  overflow: hidden;
}
/* -------------------------------------------- */
/* Container for "View Estimate"/"View Invoice" button */
.buttonContainer {
  margin-top: 9px;
  display: flex;
  justify-content: flex-start; /* keep it on the left */
}

/* === "View Estimate" button (unchanged) === */
.viewEstimateButton {
  width: fit-content;
  height: 50px;
  flex-shrink: 0;
  border-radius: 16px;
  background: #59B779;

  display: flex;
  align-items: center;
  justify-content: flex-start;
  padding: 0 16px;

  border: none;
  cursor: pointer;
}

.viewEstimateText {
  color: #FFF;
  font-family: Satoshi, sans-serif;
  font-size: 15px;
  font-style: normal;
  font-weight: 700;
  line-height: normal;
  margin-right: 18px;
}

.viewEstimateIconWrapper {
  width: 30px;
  height: 30px;
  flex-shrink: 0;
  border-radius: 10px;
  background: #FFF;

  display: flex;
  align-items: center;
  justify-content: center;
}

/* The ReactComponent-based SVG (16x16) with green fill */
.viewEstimateIcon {
  width: 16px;
  height: 16px;
  flex-shrink: 0;
  color: #59B779;
}

/* === NEW: "View Invoice" button with #faa81a === */
.viewInvoiceButton {
  width: 177px;
  height: 50px;
  flex-shrink: 0;
  border-radius: 16px;
  background: #faa81a;

  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 16px;

  border: none;
  cursor: pointer;
}

.viewInvoiceText {
  color: #FFF;
  font-family: Satoshi, sans-serif;
  font-size: 15px;
  font-style: normal;
  font-weight: 700;
  line-height: normal;
  margin-right: 18px;
}

.viewInvoiceIconWrapper {
  width: 30px;
  height: 30px;
  flex-shrink: 0;
  border-radius: 10px;
  background: #FFF;

  display: flex;
  align-items: center;
  justify-content: center;
}

.viewInvoiceIcon {
  width: 16px;
  height: 16px;
  flex-shrink: 0;
  color: #faa81a;
}

/* -------------------------------------------- */
/* New class for Invoice fields (no visible border).
   We reuse .pricingValue but turn it into an input. */
.invoiceValueInput {
  /* remove default border, background, etc. */
  border: none;
  background: transparent;
  outline: none;
  padding: 0;
  margin: 0;

  /* preserve the same font, color, alignment, etc.
     as the .pricingValue class. It's already combined
     with .pricingValue, so it's consistent. */

  width: 60%;
  max-width: 60%;
  cursor: text;
}

/* Add standardized focus style */
.invoiceValueInput:focus {
  border-bottom: 1px solid var(--Blue, #3FA9F5);
}

/* Style for read-only invoice fields */
.invoiceValueInput[readonly] {
  cursor: default;
  color: #6E7882;
}

.readOnlyField {
  pointer-events: none;
  opacity: 0.8;
}